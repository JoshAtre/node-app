name: GKE CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: service-project-dev-1a
  GAR_LOCATION: us-west2
  REPOSITORY: simple-node-server

jobs:
  build-and-deploy:
    # Add "id-token" with the intended permissions
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      # Step 2: Authenticate to Google Cloud using Workload Identity Federation
      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/89346032191/locations/global/workloadIdentityPools/github-actions-cloud-run/providers/github'
          service_account: 'github-cloud-deploy-sa@service-project-dev-1a.iam.gserviceaccount.com'
          token_format: 'access_token'

      # Step 3: Set up Google Cloud SDK
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ env.PROJECT_ID }}'
      
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
      
      # Step 4: Set up Docker Buildx for multi-platform builds
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # # Step 5: Build and push Docker images for each service
      # - name: Build and push auth image
      #   run: |
      #     docker buildx build --load --platform linux/amd64,linux/arm64 -t auth .
      #     docker tag auth: latest ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/auth:latest
      #     docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/auth:latest

      # - name: Build and push hello image
      #   run: |
      #     docker buildx build --load --platform linux/amd64,linux/arm64 -t hello .
      #     docker tag hello: latest ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/hello:latest
      #     docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/hello:latest

      # - name: Build and push backend image
      #   run: |
      #     docker buildx build --load --platform linux/amd64,linux/arm64 -t backend .
      #     docker tag backend: latest ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest
      #     docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest

      # # Step 6: Deploy to GKE
      # - name: Deploy to GKE
      #   run: |
      #     kubectl apply -f ./auth/k8s/deployment.yaml
      #     kubectl apply -f ./auth/k8s/service.yaml
      #     kubectl apply -f ./hello/k8s/deployment.yaml
      #     kubectl apply -f ./hello/k8s/service.yaml
      #     kubectl apply -f ./backend/k8s/deployment.yaml
      #     kubectl apply -f ./backend/k8s/service.yaml
      #     kubectl apply -f ./k8s/ingress.yaml
            